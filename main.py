"""Кратко о функциях input() print() @s_evg13 for PYFREE-4"""

"""Функция input по умолчанию всегда принимает строку, чтобы туда не ввели.
Имена переменных должны начинаться с латинской буквы, интуитивно понятны,
если они состоят из нескольких слов, то разделять их нужно _ Напрмер:
name_one, name_two, также можно использовать цифры: name_1, name_2"""

#Всё что введено в """тройные кавычки""", или за знаком решётки # при выполнении
#интерпритатором программы опускаются, и потому здесь можно писать комментария.

name = input("Введите Ваше имя: ") # просим у пользователя ввести его имя
age = input("Введите Ваш возраст: ") # просим пользователя ввести его возраст

print(name, age) # функция print выведет на экран имя пользователя и его возраст.

"""Заметьте что переременные в функции print перечесляются через запятую,
а выводятся через пробел (если не указан агрумент сепаратор sep, а по умолчанию он и есть пробел).
Пока вроде бы всё понятно, но что будет, если мы хотим приветствовать пользователя, и сообщать ему его возраст?
Для этого можно произвести конкатенацию строк:"""

print("Привет, " + name + ", тебе " + age + " лет.")

"""Прошу обратить внимание на пробелы: после запятой в строке 'Привет, ' после слова ', тебе '
и перед словом ' лет.'. Если этого не сделать, то у нас все слова слипнутся, и мы получим:"""

print("Привет," + name + ", тебе" + age + "лет." + "  <<< Такой вывод мы получим,\nесли не соблюдать пробелы.")

"""Согласитесь, что с таким указанием аргументов, переменных в функции print можно запутаться. 
А есть ли способ, проще, лаконичнее, удобнее и понятнее? Есть! Использовать форматированные строки,
или как их называют f-строки: Синтаксис здесь предельно простой: пишем как обычно print, далее указываем,
что будем применять форматированную строку индексом f, и далее в кавычках пишем простым текстом, что необходимо
вывести на экран, заключая в фигурные скобки {переменную} которую необходимо подставить:"""

print(f"Привет, {name}, тебе {age} лет.") # в такой строке меньше символов, а значит она более проще для чтения человеком.

"""Пока на ввод мы получали только строки, даже когда просили у пользователя ввести его возраст,
но на входе получали строку, даже если он вводил числа. Но что, если нам нужно произвести какие-то математический
действия? Для этого нужно привести переменную с типом строки (str) к переменной с типом (int) - целое число,
или (float) - если число с плавающей точкой (дробное), если этого не сделать, то получим ошибку.
* Заметьте! Что в Pythoh для отделения целой части от дробной используют точку (.) если Вы напишете запятую (,)
то программа будет работать не корректно. Для простоты, и если заранее известен ожидаемый тип вводимых переменных,
то можно использовать такие конструкции:
int(input("Введите целое число: ")) - для ввода целых чисел
float(input("Введите дробное число: ")) - для ввода дробных чисел 
* Если применить float для целого числа то мы получим число с плавающей точкой со значение дробной части 0
Например: float(5) получим 5.0
* При деление любого числа на число, даже цегого на целое всегла получаем тип float: 4 / 2 = 2.0
Рассмотрим всё это на примере:
Допустим, запросим у пользователя его часовую ставку, и выведем сколько он получит в зависимости от
количества рабочих часов в день и количества рабочих дней:"""

cost = int(input("Введите стоимость Вашего часа: ")) # Мы ожидаем что стоймость часа это целое число
hour = int(input("Ведите сколько часов Вы работаете в день: ")) # количество часов это целое число
day = int(input("Введите количество рабочих дней: ")) # количество дней это тоже целое число

hour_cost = cost * hour # посчитаем доход в день, в зависимости от рабочих часов.
day_cots = hour_cost * day # расчитаем доход от количества рабочих дней.
tax = day_cots * 0.04 # раситаем налог для самозанятых, при работе с физлицами

"""tax получим типа float так произвели умножение целого числа в переменной day_cots
на дробное число 0.04 обозначающие налог 4% для самозанятых при работе с физлицами."""

over_coct = day_cots - tax # также получим тип float так как имеем переменную tax типа float

"""Выведем всё что получили на экран:"""

print(f"Вы получите {over_coct} рублей, налог составит {tax} рублей.")
